<h3 style="margin-left: 50%;">

    Welcome <%= info[0].USERNAME %>
</h3>

<% if(pending.ID==0){%>
    <% if(oldPending.length>0){%>
        <h3 style="margin-left:40%">SORRY!!We couldn't manage a Driver for you in 30 minutes.Please try again .</h3>
        

        <%} %>
    <iframe src="dir.html" style="height: 80vh"></iframe>
    <% } %>

        <% if(pending.ID!=0){%>
            <div class="request-container" ,style="margin-left:60%">
                <div class="request-details" ,style="margin-left:60%">
                    <h3 style="margin-left: 40%;"> YOU ALREADY HAVE A PENDING REQUEST</h3>
                </div>

                <div class="request-details" ,style="margin:left:60%">

                    <p style="margin-left: 40%;"><strong>Pick-up:</strong>
                        <%= pending.PICK_UP %>
                    </p>
                    <p style="margin-left: 40%;"><strong>Drop-off:</strong>
                        <%= pending.DROP_OFF %>
                    </p>
                    <p style="margin-left: 40%;"><strong>Vehicle Type:</strong>
                        <%= pending.V_TYPE %>
                    </p>
                </div>


                <!-- <button class="cancel-button" name="Cancel" style="margin-left: 60%;">Cancel Request</button>  -->
                <form action="/user/cancel" method="POST">

                    <input type="submit" value="Cancel" class="btn  btn-secondary" style="margin-left: 60%;">

                </form>
            </div>






            <% } %>


                <script>
                    var timer, timer2,timerw,timeri;
                    async function loadInfo() {
                        // const stat=await fetch('/user/pending_status');
                        // const info=await stat.text();
                        //alert(info);
                        if (localStorage.getItem('loadInfo') === 'true') {
                           localStorage.removeItem('loadInfo');
                        //if(info.includes('already')){
                            
                            clearInterval(timeri);
                            window.location='/user/info';
                            
                        }
                    }
                    async function loadWallet() {
                        // const stat=await fetch('/user/pending_status');
                        // const info=await stat.text();
                        //alert(info);
                        if (localStorage.getItem('loadWallet') === 'true') {
                           localStorage.removeItem('loadWallet');
                        //if(info.includes('already')){
                            
                            
                            window.location='/user/wallet';
                            clearInterval(timerw);
                            
                        }
                    }
                    async function check2() {
                        // const stat=await fetch('/user/pending_status');
                        // const info=await stat.text();
                        //alert(info);
                        if (localStorage.getItem('reloadUser') === 'true') {
                           localStorage.removeItem('reloadUser');
                        //if(info.includes('already')){
                            location.reload()
                            clearInterval(timer2);
                        }
                    }
                    async function check() {
                        const data = await fetch('user/request_status')
                        const text = await data.text();
                        //alert("got text: " + text);
                        if (text.includes('accepted')) {
                            alert('Your Ride Request Has Been Accepted')
                            clearInterval(timer);
                            window.location = '/user/running'
                        }
                        else if (text.includes('already done')) {
                            // alert('Your Ride Request Has ALREEEEEEAAAAAAAAADY Been Accepted')
                            clearInterval(timer);
                            //window.location = '/user/running'
                        }

                    }

                    async function checkOld() {
                        const data = await fetch('user/requests/old')
                        const text = await data.text();
                        //alert("got text: " + text);
                        if (text.includes('old')) {
                            alert('Sorry!!No nearby driver accepted your request in 30 minutes.Try again!!');
                            const done=await fetch('user/requests/deleteold');
                            const st=await done.text();
                            //alert(st);
                            if(st.includes('done')) {
                                //alert('reloading');
                                location.reload()
                            clearInterval(timero);
                            //window.location = '/user';
                            }
                        }
                        

                    }



                
                    timer2 = setInterval(check2, 500);
                    timer = setInterval(check, 5000);
                    timeri=setInterval(loadInfo,1000);
                    timerw=setInterval(loadWallet,1000);
                    timero=setInterval(checkOld,5000);
                    
                </script>